<div class="container pt-2">
  <div class="row">
    <div class="col-md-10 my-2 bg-light offset-md-1">
      <h1 class="float-left"><%= t('.title') %></h1><br>
      <%= link_to t('defaults.edit'), edit_profile_path, class: 'btn btn-success float-right' %>
      <table class="table">
        <tr>
          <th scope="row"><%= User.human_attribute_name(:nickname) %></th>
          <td>
            <% if current_user.nickname.present? %>
              <%= current_user.nickname %>
            <% else %>
              <%= current_user.name %>
            <% end %>
          </td>
        </tr>
        <tr>
          <th scope="row"><%= User.human_attribute_name(:avatar) %></th>
          <td><%= image_tag current_user.avatar.url, class: 'rounded-circle', size: '50x50' %></td>
        </tr>
        <tr>
          <th scope="row"><%= User.human_attribute_name(:twitter_url) %></th>
          <td><%= link_to current_user.twitter_url do %>
            <i class="bi bi-twitter"></i>
          <% end %>
          </td>
        </tr>
        <tr>
          <th scope="row"><%= User.human_attribute_name(:introduction) %></th>
          <td><%= current_user.introduction %></td>
        </tr>
        <tr>
          <th scope="row"><%= User.human_attribute_name(:reminder_time) %></th>
          <td><%= current_user.reminder_time.strftime('%H:%M') if current_user.reminder_time %></td>
        </tr>
      </table>
      <div class='text-center'>
        <%= link_to new_profile_path do %>
          <button class='btn btn-info'>個人の活動記録</button>
        <% end %>
      </div>
      <br>
      
      <button onclick="loadChartData('overall')">全体</button>
      <button onclick="loadChartData('weekly')">週間</button>
      <button onclick="loadChartData('monthly')">月間</button>

      <canvas id="myChart"></canvas>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
      <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart;

        function loadChartData(timeInterval) {
          var records;
          if (timeInterval === 'weekly') {
            records = <%= @weekly_records.to_json.html_safe %>;
          } else if (timeInterval === 'monthly') {
            records = <%= @monthly_records.to_json.html_safe %>;
          } else {
            records = <%= @records.to_json.html_safe %>;
          }

          updateChart(records);
        }

        function updateChart(records) {
          if (myChart) {
            myChart.destroy();
          }

          var chartData = {
            labels: records.map(function(record) {
              return record[0];  // 日付を取得
            }),
            datasets: [
              {
                label: '活動時間',
                data: records.map(function(record) {
                  return record[1];
                }),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                yAxisID: 'y-axis-1'
              },
              {
                label: '消費カロリー',
                data: records.map(function(record) {
                  return record[2];
                }),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                yAxisID: 'y-axis-2'
              },
              {
                label: '走行距離',
                data: records.map(function(record) {
                  return record[3];
                }),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                yAxisID: 'y-axis-3'
              }
            ]
          };

          myChart = new Chart(ctx, {
            type: 'line',
            data: chartData,
            options: {
              scales: {
                x: {
                  type: 'time',
                  time: {
                    unit: 'day',
                    displayFormats: {
                      day: 'yy/MM/dd'
                    },
                    parser: function(value){
                      return new Date(value);
                    }
                  }
                },
                'y-axis-1': {
                  position: 'left',
                  ticks: {
                    callback: function(value, index, values) {
                      const minutes = Math.floor(value / 60);
                      const seconds = value % 60;
                      return minutes + '分' + seconds + '秒';
                    }
                  }
                },
                'y-axis-2': {
                  position: 'right',
                  ticks: {
                    callback: function(value, index, values) {
                      return value.toFixed(2) + 'kcal';
                    }
                  }
                },
                'y-axis-3': {
                  position: 'right',
                  ticks: {
                    callback: function(value, index, values) {
                      return value.toFixed(2) + 'km';
                    }
                  }
                }
              }
            }
          });
        }
        loadChartData('overall');
        </script>

      <br>
    </div>
  </div>
</div>
